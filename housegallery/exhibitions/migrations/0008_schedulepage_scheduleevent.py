# Generated by Django 5.0.10 on 2025-05-13 07:17

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exhibitions', '0007_remove_exhibitionpage_gallery_exhibitionpage_body_and_more'),
        ('images', '0001_images'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchedulePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the schedule page', null=True)),
                ('body', wagtail.fields.StreamField([('rich_text', 0), ('button_link', 7), ('list_of_links', 12)], blank=True, block_lookup={0: ('housegallery.core.blocks.RichTextBlock', (), {'icon': 'doc-full', 'label': 'Rich Text'}), 1: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('page', 'Page'), ('external', 'External URL'), ('document', 'Document'), ('email', 'Email Address')], 'help_text': 'Select the type of link you want to create'}), 2: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional custom link text. Leave blank to use the page/document title or URL', 'required': False}), 3: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 4: ('wagtail.blocks.URLBlock', (), {'required': False}), 5: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': False}), 6: ('wagtail.blocks.EmailBlock', (), {'required': False}), 7: ('wagtail.blocks.StructBlock', [[('link_type', 1), ('link_text', 2), ('page', 3), ('external_url', 4), ('document', 5), ('email', 6)]], {'icon': 'link', 'label': 'Single button'}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the list of links', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('link_type', 1), ('link_text', 2), ('page', 3), ('external_url', 4), ('document', 5), ('email', 6)]], {'label': 'Button Style Link'}), 10: ('wagtail.blocks.StructBlock', [[('link_type', 1), ('link_text', 2), ('page', 3), ('external_url', 4), ('document', 5), ('email', 6)]], {'label': 'Carrot Style Link'}), 11: ('wagtail.blocks.StreamBlock', [[('button_link', 9), ('carrot_link', 10)]], {}), 12: ('wagtail.blocks.StructBlock', [[('title', 8), ('links', 11)]], {'icon': 'list-ul', 'label': 'List of Links'})}, help_text='Additional content for the schedule page')),
                ('contact_email', models.EmailField(blank=True, help_text='Email address for schedule inquiries', max_length=254, null=True)),
                ('submission_info', wagtail.fields.RichTextField(blank=True, help_text='Information about submitting artwork or proposals', null=True)),
                ('listing_image', models.ForeignKey(blank=True, help_text='Choose the image you wish to be displayed when this page appears in listings', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ScheduleEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(help_text='Event title', max_length=255)),
                ('event_type', models.CharField(blank=True, help_text='Type of event (e.g., Exhibition, Residency, Opening)', max_length=255, null=True)),
                ('month', models.CharField(help_text='Month of the event (e.g., January, February)', max_length=20)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Brief description of the event', null=True)),
                ('link', models.URLField(blank=True, help_text='Optional link to more information', null=True)),
                ('featured_image', models.ForeignKey(blank=True, help_text='Optional image for this event', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule_events', to='exhibitions.schedulepage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
