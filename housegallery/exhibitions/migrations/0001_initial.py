# Generated by Django 5.0.10 on 2025-06-03 04:32

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Event title', max_length=255)),
                ('event_type', models.CharField(blank=True, help_text='Type of event (e.g., Exhibition, Residency, Opening)', max_length=255)),
                ('month', models.CharField(help_text='Month of the event (e.g., January, February)', max_length=20)),
                ('year', models.IntegerField(blank=True, help_text='Year of the event (optional)', null=True)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Brief description of the event')),
                ('link', models.URLField(blank=True, help_text='Optional link to more information')),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck to hide this event from listings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-year', 'month', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ExhibitionArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExhibitionArtwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExhibitionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Exhibition start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Exhibition end date')),
                ('description', wagtail.fields.RichTextField(blank=True)),
                ('body', wagtail.fields.StreamField([('gallery', 8), ('rich_text', 9), ('button_link', 16), ('list_of_links', 21)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for the image', 'required': False}), 2: ('wagtail.snippets.blocks.SnippetChooserBlock', ('artworks.Artwork',), {'help_text': 'Select related artwork if applicable', 'required': False}), 3: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check if this is an installation shot (not a specific artwork)', 'required': False}), 4: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 1), ('artwork', 2), ('is_installation_shot', 3)]], {}), 5: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Front side of the show card', 'required': True}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Back side of the show card (optional)', 'required': False}), 7: ('wagtail.blocks.StructBlock', [[('front_image', 5), ('back_image', 6)]], {}), 8: ('wagtail.blocks.StreamBlock', [[('image', 4), ('showcard', 7)]], {'label': 'Image Gallery'}), 9: ('wagtail.blocks.RichTextBlock', (), {'label': 'Rich Text'}), 10: ('wagtail.blocks.CharBlock', (), {'help_text': 'Link text to display. Leave blank to use the page/document title or URL as fallback', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('page', 'Page'), ('external', 'External URL'), ('document', 'Document'), ('email', 'Email Address')], 'help_text': 'Select the type of link you want to create'}), 12: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 13: ('wagtail.blocks.URLBlock', (), {'required': False}), 14: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': False}), 15: ('wagtail.blocks.EmailBlock', (), {'required': False}), 16: ('wagtail.blocks.StructBlock', [[('link_text', 10), ('link_type', 11), ('page', 12), ('external_url', 13), ('document', 14), ('email', 15)]], {'label': 'Button Link'}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the list of links', 'required': False}), 18: ('wagtail.blocks.StructBlock', [[('link_text', 10), ('link_type', 11), ('page', 12), ('external_url', 13), ('document', 14), ('email', 15)]], {'label': 'Button Style Link'}), 19: ('wagtail.blocks.StructBlock', [[('link_text', 10), ('link_type', 11), ('page', 12), ('external_url', 13), ('document', 14), ('email', 15)]], {'label': 'Carrot Style Link'}), 20: ('wagtail.blocks.StreamBlock', [[('button_link', 18), ('carrot_link', 19)]], {}), 21: ('wagtail.blocks.StructBlock', [[('title', 17), ('links', 20)]], {'label': 'List of Links'})}, help_text='Gallery images, showcards, and other content for this exhibition')),
                ('exhibition_images', wagtail.fields.StreamField([('select_image', 2), ('tagged_set', 5)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for this image', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 1)]], {}), 3: ('wagtail.blocks.CharBlock', (), {'help_text': 'Enter tag name to display all images with this tag', 'max_length': 100, 'required': True}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for this set of images', 'max_length': 255, 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('tag', 3), ('title', 4)]], {})}, help_text="Images from the exhibition - use 'Select Image' for individual images or 'Tagged Set' for groups of images by tag")),
                ('opening_images', wagtail.fields.StreamField([('select_image', 2), ('tagged_set', 5)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for this image', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 1)]], {}), 3: ('wagtail.blocks.CharBlock', (), {'help_text': 'Enter tag name to display all images with this tag', 'max_length': 100, 'required': True}), 4: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for this set of images', 'max_length': 255, 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('tag', 3), ('title', 4)]], {})}, help_text="Images from the opening event - use 'Select Image' for individual images or 'Tagged Set' for groups of images by tag")),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ExhibitionsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('body', wagtail.fields.StreamField([('gallery', 8), ('rich_text', 9), ('button_link', 16), ('list_of_links', 21)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for the image', 'required': False}), 2: ('wagtail.snippets.blocks.SnippetChooserBlock', ('artworks.Artwork',), {'help_text': 'Select related artwork if applicable', 'required': False}), 3: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check if this is an installation shot (not a specific artwork)', 'required': False}), 4: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 1), ('artwork', 2), ('is_installation_shot', 3)]], {}), 5: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Front side of the show card', 'required': True}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Back side of the show card (optional)', 'required': False}), 7: ('wagtail.blocks.StructBlock', [[('front_image', 5), ('back_image', 6)]], {}), 8: ('wagtail.blocks.StreamBlock', [[('image', 4), ('showcard', 7)]], {'label': 'Image Gallery'}), 9: ('wagtail.blocks.RichTextBlock', (), {'label': 'Rich Text'}), 10: ('wagtail.blocks.CharBlock', (), {'help_text': 'Link text to display. Leave blank to use the page/document title or URL as fallback', 'required': False}), 11: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('page', 'Page'), ('external', 'External URL'), ('document', 'Document'), ('email', 'Email Address')], 'help_text': 'Select the type of link you want to create'}), 12: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 13: ('wagtail.blocks.URLBlock', (), {'required': False}), 14: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': False}), 15: ('wagtail.blocks.EmailBlock', (), {'required': False}), 16: ('wagtail.blocks.StructBlock', [[('link_text', 10), ('link_type', 11), ('page', 12), ('external_url', 13), ('document', 14), ('email', 15)]], {'label': 'Button Link'}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the list of links', 'required': False}), 18: ('wagtail.blocks.StructBlock', [[('link_text', 10), ('link_type', 11), ('page', 12), ('external_url', 13), ('document', 14), ('email', 15)]], {'label': 'Button Style Link'}), 19: ('wagtail.blocks.StructBlock', [[('link_text', 10), ('link_type', 11), ('page', 12), ('external_url', 13), ('document', 14), ('email', 15)]], {'label': 'Carrot Style Link'}), 20: ('wagtail.blocks.StreamBlock', [[('button_link', 18), ('carrot_link', 19)]], {}), 21: ('wagtail.blocks.StructBlock', [[('title', 17), ('links', 20)]], {'label': 'List of Links'})})),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='SchedulePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the schedule page', null=True)),
                ('body', wagtail.fields.StreamField([('rich_text', 0), ('button_link', 7), ('list_of_links', 12)], blank=True, block_lookup={0: ('housegallery.core.blocks.RichTextBlock', (), {'icon': 'doc-full', 'label': 'Rich Text'}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Link text to display. Leave blank to use the page/document title or URL as fallback', 'required': False}), 2: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('page', 'Page'), ('external', 'External URL'), ('document', 'Document'), ('email', 'Email Address')], 'help_text': 'Select the type of link you want to create'}), 3: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 4: ('wagtail.blocks.URLBlock', (), {'required': False}), 5: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': False}), 6: ('wagtail.blocks.EmailBlock', (), {'required': False}), 7: ('wagtail.blocks.StructBlock', [[('link_text', 1), ('link_type', 2), ('page', 3), ('external_url', 4), ('document', 5), ('email', 6)]], {'icon': 'link', 'label': 'Single button'}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the list of links', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('link_text', 1), ('link_type', 2), ('page', 3), ('external_url', 4), ('document', 5), ('email', 6)]], {'label': 'Button Style Link'}), 10: ('wagtail.blocks.StructBlock', [[('link_text', 1), ('link_type', 2), ('page', 3), ('external_url', 4), ('document', 5), ('email', 6)]], {'label': 'Carrot Style Link'}), 11: ('wagtail.blocks.StreamBlock', [[('button_link', 9), ('carrot_link', 10)]], {}), 12: ('wagtail.blocks.StructBlock', [[('title', 8), ('links', 11)]], {'icon': 'list-ul', 'label': 'List of Links'})}, help_text='Additional content for the schedule page')),
                ('contact_email', models.EmailField(blank=True, help_text='Email address for schedule inquiries', max_length=254, null=True)),
                ('submission_info', wagtail.fields.RichTextField(blank=True, help_text='Information about submitting artwork or proposals', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
    ]
