# Generated by Django 5.0.10 on 2025-06-26 05:57

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Event title', max_length=255)),
                ('event_type', models.CharField(blank=True, help_text='Type of event (e.g., Exhibition, Residency, Opening)', max_length=255)),
                ('month', models.CharField(help_text='Month of the event (e.g., January, February)', max_length=20)),
                ('year', models.IntegerField(blank=True, help_text='Year of the event (optional)', null=True)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Brief description of the event')),
                ('link', models.URLField(blank=True, help_text='Optional link to more information')),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck to hide this event from listings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-year', 'month', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ExhibitionArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExhibitionArtwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExhibitionImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('caption', models.CharField(blank=True, help_text='Optional caption for this image', max_length=255)),
                ('image_type', models.CharField(choices=[('exhibition', 'Exhibition'), ('opening', 'Opening'), ('showcards', 'Showcards')], default='exhibition', help_text='Type of image - exhibition, opening event, or showcards', max_length=20)),
            ],
            options={
                'verbose_name': 'Exhibition Image',
                'verbose_name_plural': 'Exhibition Images',
            },
        ),
        migrations.CreateModel(
            name='ExhibitionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Exhibition start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Exhibition end date')),
                ('description', wagtail.fields.RichTextField(blank=True)),
                ('body', wagtail.fields.StreamField([('gallery', 8), ('gallery_block', 20), ('exhibition_feature', 22), ('rich_text', 23), ('button_link', 30), ('list_of_links', 35)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for the image', 'required': False}), 2: ('wagtail.snippets.blocks.SnippetChooserBlock', ('artworks.Artwork',), {'help_text': 'Select related artwork if applicable', 'required': False}), 3: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check if this is an installation shot (not a specific artwork)', 'required': False}), 4: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 1), ('artwork', 2), ('is_installation_shot', 3)]], {}), 5: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Front side of the show card', 'required': True}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Back side of the show card (optional)', 'required': False}), 7: ('wagtail.blocks.StructBlock', [[('front_image', 5), ('back_image', 6)]], {}), 8: ('wagtail.blocks.StreamBlock', [[('image', 4), ('showcard', 7)]], {'label': 'Image Gallery'}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the gallery', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('columns', 'Columns'), ('rows', 'Rows'), ('scattered', 'Scattered')], 'help_text': 'Choose how to display the gallery images'}), 11: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Enable full-width layout using layout gutter spacing', 'required': False}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for this image', 'max_length': 255, 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 12)]], {}), 14: ('wagtail.blocks.CharBlock', (), {'help_text': 'Enter tag name to display all images with this tag', 'max_length': 100, 'required': True}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for this set of images', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.StructBlock', [[('tag', 14), ('title', 15)]], {}), 17: ('wagtail.blocks.IntegerBlock', (), {'help_text': 'Maximum number of images to display (leave blank for all)', 'max_value': 100, 'min_value': 1, 'required': False}), 18: ('wagtail.blocks.StructBlock', [[('limit', 17)]], {}), 19: ('wagtail.blocks.StreamBlock', [[('single_image', 13), ('tagged_set', 16), ('all_images', 18)]], {'help_text': 'Add gallery items'}), 20: ('wagtail.blocks.StructBlock', [[('title', 9), ('display_style', 10), ('full_width', 11), ('gallery_items', 19)]], {'label': 'Gallery'}), 21: ('wagtail.blocks.PageChooserBlock', ('exhibitions.ExhibitionPage',), {'help_text': 'Select an exhibition page to feature', 'required': True}), 22: ('wagtail.blocks.StructBlock', [[('exhibition', 21)]], {'label': 'Exhibition Feature'}), 23: ('wagtail.blocks.RichTextBlock', (), {'label': 'Rich Text'}), 24: ('wagtail.blocks.CharBlock', (), {'help_text': 'Link text to display. Leave blank to use the page/document title or URL as fallback', 'required': False}), 25: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('page', 'Page'), ('external', 'External URL'), ('document', 'Document'), ('email', 'Email Address')], 'help_text': 'Select the type of link you want to create'}), 26: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 27: ('wagtail.blocks.URLBlock', (), {'required': False}), 28: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': False}), 29: ('wagtail.blocks.EmailBlock', (), {'required': False}), 30: ('wagtail.blocks.StructBlock', [[('link_text', 24), ('link_type', 25), ('page', 26), ('external_url', 27), ('document', 28), ('email', 29)]], {'label': 'Button Link'}), 31: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the list of links', 'required': False}), 32: ('wagtail.blocks.StructBlock', [[('link_text', 24), ('link_type', 25), ('page', 26), ('external_url', 27), ('document', 28), ('email', 29)]], {'label': 'Button Style Link'}), 33: ('wagtail.blocks.StructBlock', [[('link_text', 24), ('link_type', 25), ('page', 26), ('external_url', 27), ('document', 28), ('email', 29)]], {'label': 'Carrot Style Link'}), 34: ('wagtail.blocks.StreamBlock', [[('button_link', 32), ('carrot_link', 33)]], {}), 35: ('wagtail.blocks.StructBlock', [[('title', 31), ('links', 34)]], {'label': 'List of Links'})}, help_text='Gallery images, showcards, and other content for this exhibition')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ExhibitionsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('body', wagtail.fields.StreamField([('gallery', 8), ('gallery_block', 20), ('exhibition_feature', 22), ('rich_text', 23), ('button_link', 30), ('list_of_links', 35)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for the image', 'required': False}), 2: ('wagtail.snippets.blocks.SnippetChooserBlock', ('artworks.Artwork',), {'help_text': 'Select related artwork if applicable', 'required': False}), 3: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Check if this is an installation shot (not a specific artwork)', 'required': False}), 4: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 1), ('artwork', 2), ('is_installation_shot', 3)]], {}), 5: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Front side of the show card', 'required': True}), 6: ('wagtail.images.blocks.ImageChooserBlock', (), {'help_text': 'Back side of the show card (optional)', 'required': False}), 7: ('wagtail.blocks.StructBlock', [[('front_image', 5), ('back_image', 6)]], {}), 8: ('wagtail.blocks.StreamBlock', [[('image', 4), ('showcard', 7)]], {'label': 'Image Gallery'}), 9: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the gallery', 'max_length': 255, 'required': False}), 10: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('columns', 'Columns'), ('rows', 'Rows'), ('scattered', 'Scattered')], 'help_text': 'Choose how to display the gallery images'}), 11: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Enable full-width layout using layout gutter spacing', 'required': False}), 12: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for this image', 'max_length': 255, 'required': False}), 13: ('wagtail.blocks.StructBlock', [[('image', 0), ('caption', 12)]], {}), 14: ('wagtail.blocks.CharBlock', (), {'help_text': 'Enter tag name to display all images with this tag', 'max_length': 100, 'required': True}), 15: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for this set of images', 'max_length': 255, 'required': False}), 16: ('wagtail.blocks.StructBlock', [[('tag', 14), ('title', 15)]], {}), 17: ('wagtail.blocks.IntegerBlock', (), {'help_text': 'Maximum number of images to display (leave blank for all)', 'max_value': 100, 'min_value': 1, 'required': False}), 18: ('wagtail.blocks.StructBlock', [[('limit', 17)]], {}), 19: ('wagtail.blocks.StreamBlock', [[('single_image', 13), ('tagged_set', 16), ('all_images', 18)]], {'help_text': 'Add gallery items'}), 20: ('wagtail.blocks.StructBlock', [[('title', 9), ('display_style', 10), ('full_width', 11), ('gallery_items', 19)]], {'label': 'Gallery'}), 21: ('wagtail.blocks.PageChooserBlock', ('exhibitions.ExhibitionPage',), {'help_text': 'Select an exhibition page to feature', 'required': True}), 22: ('wagtail.blocks.StructBlock', [[('exhibition', 21)]], {'label': 'Exhibition Feature'}), 23: ('wagtail.blocks.RichTextBlock', (), {'label': 'Rich Text'}), 24: ('wagtail.blocks.CharBlock', (), {'help_text': 'Link text to display. Leave blank to use the page/document title or URL as fallback', 'required': False}), 25: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('page', 'Page'), ('external', 'External URL'), ('document', 'Document'), ('email', 'Email Address')], 'help_text': 'Select the type of link you want to create'}), 26: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 27: ('wagtail.blocks.URLBlock', (), {'required': False}), 28: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': False}), 29: ('wagtail.blocks.EmailBlock', (), {'required': False}), 30: ('wagtail.blocks.StructBlock', [[('link_text', 24), ('link_type', 25), ('page', 26), ('external_url', 27), ('document', 28), ('email', 29)]], {'label': 'Button Link'}), 31: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the list of links', 'required': False}), 32: ('wagtail.blocks.StructBlock', [[('link_text', 24), ('link_type', 25), ('page', 26), ('external_url', 27), ('document', 28), ('email', 29)]], {'label': 'Button Style Link'}), 33: ('wagtail.blocks.StructBlock', [[('link_text', 24), ('link_type', 25), ('page', 26), ('external_url', 27), ('document', 28), ('email', 29)]], {'label': 'Carrot Style Link'}), 34: ('wagtail.blocks.StreamBlock', [[('button_link', 32), ('carrot_link', 33)]], {}), 35: ('wagtail.blocks.StructBlock', [[('title', 31), ('links', 34)]], {'label': 'List of Links'})})),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='SchedulePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('intro', wagtail.fields.RichTextField(blank=True, help_text='Introduction text for the schedule page', null=True)),
                ('body', wagtail.fields.StreamField([('rich_text', 0), ('gallery', 13), ('button_link', 20), ('list_of_links', 25)], blank=True, block_lookup={0: ('housegallery.core.blocks.content.RichTextBlock', (), {'icon': 'doc-full', 'label': 'Rich Text'}), 1: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the gallery', 'max_length': 255, 'required': False}), 2: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('columns', 'Columns'), ('rows', 'Rows'), ('scattered', 'Scattered')], 'help_text': 'Choose how to display the gallery images'}), 3: ('wagtail.blocks.BooleanBlock', (), {'default': False, 'help_text': 'Enable full-width layout using layout gutter spacing', 'required': False}), 4: ('wagtail.images.blocks.ImageChooserBlock', (), {'required': True}), 5: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional caption for this image', 'max_length': 255, 'required': False}), 6: ('wagtail.blocks.StructBlock', [[('image', 4), ('caption', 5)]], {}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Enter tag name to display all images with this tag', 'max_length': 100, 'required': True}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for this set of images', 'max_length': 255, 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('tag', 7), ('title', 8)]], {}), 10: ('wagtail.blocks.IntegerBlock', (), {'help_text': 'Maximum number of images to display (leave blank for all)', 'max_value': 100, 'min_value': 1, 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('limit', 10)]], {}), 12: ('wagtail.blocks.StreamBlock', [[('single_image', 6), ('tagged_set', 9), ('all_images', 11)]], {'help_text': 'Add gallery items'}), 13: ('wagtail.blocks.StructBlock', [[('title', 1), ('display_style', 2), ('full_width', 3), ('gallery_items', 12)]], {'icon': 'image', 'label': 'Gallery'}), 14: ('wagtail.blocks.CharBlock', (), {'help_text': 'Link text to display. Leave blank to use the page/document title or URL as fallback', 'required': False}), 15: ('wagtail.blocks.ChoiceBlock', [], {'choices': [('page', 'Page'), ('external', 'External URL'), ('document', 'Document'), ('email', 'Email Address')], 'help_text': 'Select the type of link you want to create'}), 16: ('wagtail.blocks.PageChooserBlock', (), {'required': False}), 17: ('wagtail.blocks.URLBlock', (), {'required': False}), 18: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': False}), 19: ('wagtail.blocks.EmailBlock', (), {'required': False}), 20: ('wagtail.blocks.StructBlock', [[('link_text', 14), ('link_type', 15), ('page', 16), ('external_url', 17), ('document', 18), ('email', 19)]], {'icon': 'link', 'label': 'Single button'}), 21: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional title for the list of links', 'required': False}), 22: ('wagtail.blocks.StructBlock', [[('link_text', 14), ('link_type', 15), ('page', 16), ('external_url', 17), ('document', 18), ('email', 19)]], {'label': 'Button Style Link'}), 23: ('wagtail.blocks.StructBlock', [[('link_text', 14), ('link_type', 15), ('page', 16), ('external_url', 17), ('document', 18), ('email', 19)]], {'label': 'Carrot Style Link'}), 24: ('wagtail.blocks.StreamBlock', [[('button_link', 22), ('carrot_link', 23)]], {}), 25: ('wagtail.blocks.StructBlock', [[('title', 21), ('links', 24)]], {'icon': 'list-ul', 'label': 'List of Links'})}, help_text='Additional content for the schedule page')),
                ('contact_email', models.EmailField(blank=True, help_text='Email address for schedule inquiries', max_length=254, null=True)),
                ('submission_info', wagtail.fields.RichTextField(blank=True, help_text='Information about submitting artwork or proposals', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
    ]
