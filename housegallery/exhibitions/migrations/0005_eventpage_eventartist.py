# Generated by Django 5.0.10 on 2025-07-13 04:57

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('artists', '0002_initial'),
        ('exhibitions', '0004_alter_exhibitionpage_body_and_more'),
        ('images', '0001_initial'),
        ('places', '0005_placesindexpageplace'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('listing_title', models.CharField(blank=True, help_text='Override the page title used when this page appears in listings', max_length=255)),
                ('listing_summary', wagtail.fields.RichTextField(blank=True, help_text="The text summary used when this page appears in listings.                    It's also used as the description for search engines if the                    'Search description' field above is not defined. Max Length: 255", max_length=255, null=True)),
                ('exclude_from_search', models.BooleanField(default=False, help_text='If checked, this page will not appear in site search results')),
                ('event_type', models.CharField(choices=[('exhibition_opening', 'Exhibition Opening'), ('exhibition_closing', 'Exhibition Closing'), ('gallery_tour', 'Gallery Tour'), ('artist_talk', 'Artist Talk'), ('workshop', 'Workshop'), ('lecture', 'Lecture'), ('critique', 'Critique Session'), ('performance', 'Performance'), ('reception', 'Reception'), ('networking', 'Networking Event'), ('art_sale', 'Art Sale'), ('art_fair', 'Art Fair'), ('studio_sale', 'Studio Sale'), ('open_studio', 'Open Studio'), ('residency_presentation', 'Residency Presentation'), ('community_event', 'Community Event'), ('fundraiser', 'Fundraiser'), ('benefit', 'Benefit Event'), ('other', 'Other')], help_text='Type of event (opening, talk, workshop, etc.)', max_length=50)),
                ('tagline', models.CharField(blank=True, help_text='Short promotional tagline for listings', max_length=255)),
                ('start_date', models.DateField(help_text='Event start date')),
                ('end_date', models.DateField(blank=True, help_text='End date if multi-day event', null=True)),
                ('start_time', models.TimeField(blank=True, help_text='Start time (optional for all-day events)', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='End time (optional)', null=True)),
                ('all_day', models.BooleanField(default=False, help_text='Check if this is an all-day event')),
                ('custom_venue_name', models.CharField(blank=True, help_text='Venue name if not using a Place', max_length=255)),
                ('custom_address', models.TextField(blank=True, help_text='Full address if not using a Place')),
                ('location_details', models.TextField(blank=True, help_text='Additional location info (room number, directions, etc.)')),
                ('description', wagtail.fields.RichTextField(help_text='Event description for listings and social sharing')),
                ('body', wagtail.fields.StreamField([('paragraph', 0), ('image', 1), ('quote', 2), ('html', 3)], blank=True, block_lookup={0: ('wagtail.blocks.RichTextBlock', (), {}), 1: ('wagtail.images.blocks.ImageChooserBlock', (), {}), 2: ('wagtail.blocks.BlockQuoteBlock', (), {}), 3: ('wagtail.blocks.RawHTMLBlock', (), {})}, help_text='Detailed event content')),
                ('gallery_images', wagtail.fields.StreamField([('image', 0)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {})}, help_text='Additional event images')),
                ('capacity', models.PositiveIntegerField(blank=True, help_text='Maximum attendees (optional)', null=True)),
                ('registration_required', models.BooleanField(default=False, help_text='Does this event require registration?')),
                ('registration_link', models.URLField(blank=True, help_text='Link to registration/tickets')),
                ('ticket_price', models.DecimalField(blank=True, decimal_places=2, help_text='Ticket price (leave blank for free events)', max_digits=10, null=True)),
                ('contact_email', models.EmailField(blank=True, help_text='Contact for event inquiries', max_length=254)),
                ('external_link', models.URLField(blank=True, help_text='Link to external event page, social media, etc.')),
                ('featured_on_schedule', models.BooleanField(default=True, help_text='Feature this event prominently on schedule page')),
                ('featured_image', models.ForeignKey(blank=True, help_text='Main event image for listings and social sharing', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('listing_image', models.ForeignKey(blank=True, help_text='Choose the image you wish to be displayed when this page appears in listings', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('venue_place', models.ForeignKey(blank=True, help_text='Select from existing gallery/art spaces', null=True, on_delete=django.db.models.deletion.SET_NULL, to='places.place')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='EventArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('role', models.CharField(choices=[('organizer', 'Event Organizer'), ('performer', 'Performer'), ('speaker', 'Speaker'), ('teacher', 'Workshop Teacher'), ('participant', 'Participant'), ('featured', 'Featured Artist'), ('curator', 'Curator'), ('host', 'Host'), ('moderator', 'Moderator'), ('other', 'Other')], default='participant', help_text="Artist's role in this event", max_length=50)),
                ('bio_override', models.TextField(blank=True, help_text='Custom bio for this event (optional, uses artist bio if blank)')),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this artist prominently for this event')),
                ('artist', models.ForeignKey(help_text='Select artist from existing list', on_delete=django.db.models.deletion.CASCADE, to='artists.artist')),
                ('event', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_artists', to='exhibitions.eventpage')),
            ],
            options={
                'verbose_name': 'Event Artist',
                'verbose_name_plural': 'Event Artists',
                'unique_together': {('event', 'artist', 'role')},
            },
        ),
    ]
